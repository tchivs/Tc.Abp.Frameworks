@using System.Diagnostics.CodeAnalysis
@using Microsoft.AspNetCore.RequestLocalization
@using System.Globalization
@using Volo.Abp.Localization
@inherits BaseLanguageSwitch
@namespace Tchivs.Abp.AspNetCore.Blazor.Components
@if (this.Language != null && Languages != null)
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" id="languageDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            @Language.DisplayName
        </a>
        <ul class="dropdown-menu dropdown-menu-md-right" aria-labelledby="navbarDropdown">
            @foreach (var lan in this.Languages)
            {
                <li>
                    <a id="@lan.UiCultureName" class="@GetDropdownItemClass(lan)" @onclick="() => this.ChangeLanguage(lan)" href="javascript:void()">@lan.DisplayName</a>
                </li>
            }

        </ul>
    </li>
}
@code {
    [Inject, NotNull] IAbpRequestLocalizationOptionsProvider? RequestLocalizationOptionsProvider { get; set; }
    string GetDropdownItemClass(LanguageInfo languageInfo)
    {
        if (languageInfo == Language)
        {
            return "dropdown-item active";
        }
        return "dropdown-item";
    }
    protected override async Task<LanguageInfo> GetCurrentLanguage(IReadOnlyList<LanguageInfo> languages)
    {
        var currentLanguage = await base.GetCurrentLanguage(languages);
        if (currentLanguage == null)
        {
            var localizationOptions = await RequestLocalizationOptionsProvider.GetLocalizationOptionsAsync();
            if (localizationOptions.DefaultRequestCulture != null)
            {
                currentLanguage = new LanguageInfo(
                    localizationOptions.DefaultRequestCulture.Culture.Name,
                    localizationOptions.DefaultRequestCulture.UICulture.Name,
                    localizationOptions.DefaultRequestCulture.UICulture.DisplayName);
            }
            else
            {
                currentLanguage = new LanguageInfo(
                    CultureInfo.CurrentCulture.Name,
                    CultureInfo.CurrentUICulture.Name,
                    CultureInfo.CurrentUICulture.DisplayName);
            }
        }
        return currentLanguage;
    }
}
